bent_1 

ConeTraceGlobalOcclusionCS
DistanceFieldScreenGridLighting.usf 

Shader hash b1b33a32-15df7f1c-7b15f0c0-998da8c3

cs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer cb0[23], immediateIndexed
      dcl_constantbuffer cb1[132], immediateIndexed
      dcl_constantbuffer cb2[9], dynamicIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture3d (float,float,float,float) t1
      dcl_resource_texture3d (float,float,float,float) t2
      dcl_resource_texture3d (float,float,float,float) t3
      dcl_resource_texture3d (float,float,float,float) t4
      dcl_uav_typed_buffer (uint,uint,uint,uint) u0
      dcl_input vThreadID.xy
      dcl_temps 7
      dcl_thread_group 8, 8, 1
   0: ult r0.xy, vThreadID.xyxx, cb0[12].zwzz
   1: and r0.x, r0.y, r0.x
   2: if_nz r0.x
   3:   ishl r0.xy, vThreadID.xyxx, l(2, 2, 0, 0)
   4:   utof r0.xy, r0.xyxx
   5:   add r0.xy, r0.xyxx, cb0[13].xyxx
   6:   add r0.zw, r0.xxxy, l(0.0000, 0.0000, 0.5000, 0.5000)
   7:   mul r0.zw, r0.zzzw, cb0[11].xxxy
   8:   sample_l(texture2d)(float,float,float,float) r1.xyzw, r0.zwzz, t0.xyzw, s0, l(0)
   9:   lt r0.z, abs(r1.z), l(0.9990)
  10:   movc r2.xyz, r0.zzzz, l(1.0000, 0.0000, 0.0000, 0.0000), l(0.0000, 1.0000, 0.0000, 0.0000)
  11:   mul r3.xyz, r1.yzxy, r2.xyzx
  12:   mad r2.xyz, r2.zxyz, r1.zxyz, -r3.xyzx
  13:   dp3 r0.z, r2.xyzx, r2.xyzx
  14:   rsq r0.z, r0.z
  15:   mul r2.xyz, r0.zzzz, r2.xyzx
  16:   mul r3.xyz, r1.zxyz, r2.yzxy
  17:   mad r3.xyz, r1.yzxy, r2.zxyz, -r3.xyzx
  18:   mad r0.xy, r0.xyxx, l(2.0000, 2.0000, 0.0000, 0.0000), cb1[129].xyxx
  19:   add r0.xy, r0.xyxx, l(0.5000, 0.5000, 0.0000, 0.0000)
  20:   mad r0.xy, r0.xyxx, cb1[131].zwzz, -cb1[66].wzww
  21:   div r0.xy, r0.xyxx, cb1[66].xyxx                                -> float2 ScreenPosition = 
                                                                              (ScreenUV.xy - View.ScreenPositionScaleBias.wz) / View.ScreenPositionScaleBias.xy; 
  22:   mul r0.xy, r1.wwww, r0.xyxx
  23:   mul r0.yzw, r0.yyyy, cb1[49].xxyz
  24:   mad r0.xyz, r0.xxxx, cb1[48].xyzx, r0.yzwy
  25:   mad r0.xyz, r1.wwww, cb1[50].xyzx, r0.xyzx
  26:   add r0.xyz, r0.xyzx, cb1[51].xyzx                               -> Reconstruct the world position 

  27:   imad r0.w, vThreadID.y, cb0[12].z, vThreadID.x                  -> OutputBaseIndex -> 对应Grid索引，从二维xy变成一维index 

  28:   add r4.xyz, r0.xyzx, -cb0[14].xyzx
  29:   add r4.xyz, r4.xyzx, cb0[14].wwww
  30:   max r4.xyz, r4.xyzx, l(0, 0, 0, 0)
  31:   add r5.xyz, cb0[14].wwww, cb0[14].xyzx
  32:   add r5.xyz, -r0.xyzx, r5.xyzx
  33:   max r5.xyz, r5.xyzx, l(0, 0, 0, 0)
  34:   min r4.xyz, r4.xyzx, r5.xyzx
  35:   min r1.w, r4.z, r4.y 
  36:   min r1.w, r1.w, r4.x                                            -> float DistanceFromClipmap = ComputeDistanceFromBoxToPointInside(...) 

  37:   lt r1.w, cb0[9].y, r1.w
  38:   if_nz r1.w
  39:     mul r1.w, cb0[14].w, l(0.0067)
  40:     div r2.w, l(1.0000, 1.0000, 1.0000, 1.0000), cb0[9].y
  41:     mul r3.w, cb0[8].z, l(10.0000)
  42:     mad r3.w, r3.w, r3.w, l(1.0000)
  43:     mul r3.w, r3.w, cb0[8].y
  44:     mov r4.x, l(0)
  45:     loop
  46:       uge r4.y, r4.x, l(9)
  47:       breakc_nz r4.y
  48:       mul r4.yzw, r3.xxyz, cb2[r4.x + 0].yyyy
  49:       mad r4.yzw, cb2[r4.x + 0].xxxx, r2.xxyz, r4.yyzw
  50:       mad r4.yzw, cb2[r4.x + 0].zzzz, r1.xxyz, r4.yyzw
  51:       mov r5.y, r3.w
  52:       mov r5.xz, l(1.0000, 0.0000, 0.0000, 0.0000)
  53:       loop
  54:         ult r5.w, r5.z, l(10)
  55:         lt r6.x, r5.y, cb0[9].y
  56:         and r5.w, r5.w, r6.x
  57:         breakc_z r5.w
  58:         mad r6.xyz, r4.yzwy, r5.yyyy, r0.xyzx
  59:         mad r6.xyz, r6.xyzx, cb0[18].wwww, cb0[18].xyzx
  60:         sample_l(texture3d)(float,float,float,float) r5.w, r6.xyzx, t1.yzwx, s1, l(0)
  61:         mul r6.x, r5.y, cb0[22].z
  62:         iadd r6.x, -r6.x, l(161547303404896380000000000000000000000.0000)
  63:         mul_sat r6.x, r5.w, r6.x
  64:         add r6.y, r5.w, r5.y
  65:         mul r6.y, r2.w, r6.y
  66:         mul r6.y, r6.y, r6.y
  67:         mul r6.y, r6.y, l(0.6000)
  68:         min r6.y, r6.y, l(1.0000)
  69:         max r6.x, r6.y, r6.x
  70:         min r5.x, r5.x, r6.x
  71:         max r5.w, r1.w, r5.w
  72:         add r5.y, r5.w, r5.y
  73:         iadd r5.z, r5.z, l(1)
  74:       endloop
  75:       imul null, r4.y, r4.x, cb0[12].z
  76:       imad r4.y, r4.y, cb0[12].w, r0.w
  77:       atomic_umin u0, r4.y, r5.x
  78:       iadd r4.x, r4.x, l(1)
  79:     endloop
  80:   else
  81:     add r4.xyz, r0.xyzx, -cb0[15].xyzx
  82:     add r4.xyz, r4.xyzx, cb0[15].wwww
  83:     max r4.xyz, r4.xyzx, l(0, 0, 0, 0)
  84:     add r5.xyz, cb0[15].wwww, cb0[15].xyzx
  85:     add r5.xyz, -r0.xyzx, r5.xyzx
  86:     max r5.xyz, r5.xyzx, l(0, 0, 0, 0)
  87:     min r4.xyz, r4.xyzx, r5.xyzx
  88:     min r1.w, r4.z, r4.y
  89:     min r1.w, r1.w, r4.x
  90:     lt r1.w, cb0[9].y, r1.w
  91:     if_nz r1.w
  92:       mul r1.w, cb0[15].w, l(0.0067)
  93:       div r2.w, l(1.0000, 1.0000, 1.0000, 1.0000), cb0[9].y
  94:       mul r3.w, cb0[8].z, l(10.0000)
  95:       mad r3.w, r3.w, r3.w, l(1.0000)
  96:       mul r3.w, r3.w, cb0[8].y
  97:       mov r4.x, l(0)
  98:       loop
  99:         uge r4.y, r4.x, l(9)
 100:         breakc_nz r4.y
 101:         mul r4.yzw, r3.xxyz, cb2[r4.x + 0].yyyy
 102:         mad r4.yzw, cb2[r4.x + 0].xxxx, r2.xxyz, r4.yyzw
 103:         mad r4.yzw, cb2[r4.x + 0].zzzz, r1.xxyz, r4.yyzw
 104:         mov r5.y, r3.w
 105:         mov r5.xz, l(1.0000, 0.0000, 0.0000, 0.0000)
 106:         loop
 107:           ult r5.w, r5.z, l(10)
 108:           lt r6.x, r5.y, cb0[9].y
 109:           and r5.w, r5.w, r6.x
 110:           breakc_z r5.w
 111:           mad r6.xyz, r4.yzwy, r5.yyyy, r0.xyzx
 112:           mad r6.xyz, r6.xyzx, cb0[19].wwww, cb0[19].xyzx
 113:           sample_l(texture3d)(float,float,float,float) r5.w, r6.xyzx, t2.yzwx, s1, l(0)
 114:           mul r6.x, r5.y, cb0[22].z
 115:           iadd r6.x, -r6.x, l(161547303404896380000000000000000000000.0000)
 116:           mul_sat r6.x, r5.w, r6.x
 117:           add r6.y, r5.w, r5.y
 118:           mul r6.y, r2.w, r6.y
 119:           mul r6.y, r6.y, r6.y
 120:           mul r6.y, r6.y, l(0.6000)
 121:           min r6.y, r6.y, l(1.0000)
 122:           max r6.x, r6.y, r6.x
 123:           min r5.x, r5.x, r6.x
 124:           max r5.w, r1.w, r5.w
 125:           add r5.y, r5.w, r5.y
 126:           iadd r5.z, r5.z, l(1)
 127:         endloop
 128:         imul null, r4.y, r4.x, cb0[12].z
 129:         imad r4.y, r4.y, cb0[12].w, r0.w
 130:         atomic_umin u0, r4.y, r5.x
 131:         iadd r4.x, r4.x, l(1)
 132:       endloop
 133:     else
 134:       add r4.xyz, r0.xyzx, -cb0[16].xyzx
 135:       add r4.xyz, r4.xyzx, cb0[16].wwww
 136:       max r4.xyz, r4.xyzx, l(0, 0, 0, 0)
 137:       add r5.xyz, cb0[16].wwww, cb0[16].xyzx
 138:       add r5.xyz, -r0.xyzx, r5.xyzx
 139:       max r5.xyz, r5.xyzx, l(0, 0, 0, 0)
 140:       min r4.xyz, r4.xyzx, r5.xyzx
 141:       min r1.w, r4.z, r4.y
 142:       min r1.w, r1.w, r4.x
 143:       add r4.xyz, r0.xyzx, -cb0[17].xyzx
 144:       add r4.xyz, r4.xyzx, cb0[17].wwww
 145:       max r4.xyz, r4.xyzx, l(0, 0, 0, 0)
 146:       add r5.xyz, cb0[17].wwww, cb0[17].xyzx
 147:       add r5.xyz, -r0.xyzx, r5.xyzx
 148:       max r5.xyz, r5.xyzx, l(0, 0, 0, 0)
 149:       min r4.xyz, r4.xyzx, r5.xyzx
 150:       min r2.w, r4.z, r4.y
 151:       min r2.w, r2.w, r4.x
 152:       lt r1.w, cb0[9].y, r1.w
 153:       if_nz r1.w
 154:         mul r1.w, cb0[16].w, l(0.0067)
 155:         div r3.w, l(1.0000, 1.0000, 1.0000, 1.0000), cb0[9].y
 156:         mul r4.x, cb0[8].z, l(10.0000)
 157:         mad r4.x, r4.x, r4.x, l(1.0000)
 158:         mul r4.x, r4.x, cb0[8].y
 159:         mov r4.y, l(0)
 160:         loop
 161:           uge r4.z, r4.y, l(9)
 162:           breakc_nz r4.z
 163:           mul r5.xyz, r3.xyzx, cb2[r4.y + 0].yyyy
 164:           mad r5.xyz, cb2[r4.y + 0].xxxx, r2.xyzx, r5.xyzx
 165:           mad r5.xyz, cb2[r4.y + 0].zzzz, r1.xyzx, r5.xyzx
 166:           mov r4.z, l(1.0000)
 167:           mov r4.w, r4.x
 168:           mov r5.w, l(0)
 169:           loop
 170:             ult r6.x, r5.w, l(10)
 171:             lt r6.y, r4.w, cb0[9].y
 172:             and r6.x, r6.y, r6.x
 173:             breakc_z r6.x
 174:             mad r6.xyz, r5.xyzx, r4.wwww, r0.xyzx
 175:             mad r6.xyz, r6.xyzx, cb0[20].wwww, cb0[20].xyzx
 176:             sample_l(texture3d)(float,float,float,float) r6.x, r6.xyzx, t3.xyzw, s1, l(0)
 177:             mul r6.y, r4.w, cb0[22].z
 178:             iadd r6.y, -r6.y, l(161547303404896380000000000000000000000.0000)
 179:             mul_sat r6.y, r6.y, r6.x
 180:             add r6.z, r4.w, r6.x
 181:             mul r6.z, r3.w, r6.z
 182:             mul r6.z, r6.z, r6.z
 183:             mul r6.z, r6.z, l(0.6000)
 184:             min r6.z, r6.z, l(1.0000)
 185:             max r6.y, r6.z, r6.y
 186:             min r4.z, r4.z, r6.y
 187:             max r6.x, r1.w, r6.x
 188:             add r4.w, r4.w, r6.x
 189:             iadd r5.w, r5.w, l(1)
 190:           endloop
 191:           imul null, r4.w, r4.y, cb0[12].z
 192:           imad r4.w, r4.w, cb0[12].w, r0.w
 193:           atomic_umin u0, r4.w, r4.z
 194:           iadd r4.y, r4.y, l(1)
 195:         endloop
 196:       else
 197:         lt r1.w, cb0[9].y, r2.w
 198:         if_nz r1.w
 199:           mul r1.w, cb0[17].w, l(0.0067)
 200:           div r2.w, l(1.0000, 1.0000, 1.0000, 1.0000), cb0[9].y
 201:           mul r3.w, cb0[8].z, l(10.0000)
 202:           mad r3.w, r3.w, r3.w, l(1.0000)
 203:           mul r3.w, r3.w, cb0[8].y
 204:           mov r4.x, l(0)
 205:           loop
 206:             uge r4.y, r4.x, l(9)
 207:             breakc_nz r4.y
 208:             mul r4.yzw, r3.xxyz, cb2[r4.x + 0].yyyy
 209:             mad r4.yzw, cb2[r4.x + 0].xxxx, r2.xxyz, r4.yyzw
 210:             mad r4.yzw, cb2[r4.x + 0].zzzz, r1.xxyz, r4.yyzw
 211:             mov r5.y, r3.w
 212:             mov r5.xz, l(1.0000, 0.0000, 0.0000, 0.0000)
 213:             loop
 214:               ult r5.w, r5.z, l(10)
 215:               lt r6.x, r5.y, cb0[9].y
 216:               and r5.w, r5.w, r6.x
 217:               breakc_z r5.w
 218:               mad r6.xyz, r4.yzwy, r5.yyyy, r0.xyzx
 219:               mad r6.xyz, r6.xyzx, cb0[21].wwww, cb0[21].xyzx
 220:               sample_l(texture3d)(float,float,float,float) r5.w, r6.xyzx, t4.yzwx, s1, l(0)
 221:               mul r6.x, r5.y, cb0[22].z
 222:               iadd r6.x, -r6.x, l(161547303404896380000000000000000000000.0000)
 223:               mul_sat r6.x, r5.w, r6.x
 224:               add r6.y, r5.w, r5.y
 225:               mul r6.y, r2.w, r6.y
 226:               mul r6.y, r6.y, r6.y
 227:               mul r6.y, r6.y, l(0.6000)
 228:               min r6.y, r6.y, l(1.0000)
 229:               max r6.x, r6.y, r6.x
 230:               min r5.x, r5.x, r6.x
 231:               max r5.w, r1.w, r5.w
 232:               add r5.y, r5.w, r5.y
 233:               iadd r5.z, r5.z, l(1)
 234:             endloop
 235:             imul null, r4.y, r4.x, cb0[12].z
 236:             imad r4.y, r4.y, cb0[12].w, r0.w
 237:             atomic_umin u0, r4.y, r5.x
 238:             iadd r4.x, r4.x, l(1)
 239:           endloop
 240:         endif
 241:       endif
 242:     endif
 243:   endif
 244: endif
 245: ret