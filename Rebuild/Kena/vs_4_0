vs_4_0
      dcl_constantbuffer cb0[77], immediateIndexed
      dcl_constantbuffer cb1[1], immediateIndexed
      dcl_constantbuffer cb2[12], dynamicIndexed
      dcl_constantbuffer cb3[3], dynamicIndexed
      dcl_input v0.xyz
      dcl_input v1.xy
      dcl_input_sgv v2.x, instanceid
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_output o2.x
      dcl_temps 2
   0: iadd r0.x, v2.x, cb1[0].x
   1: ishl r0.y, r0.x, l(3)
   2: ishl r0.x, r0.x, l(1)
   3: mad o1.xy, v1.xyxx, cb3[r0.x + 0].xyxx, cb3[r0.x + 0].zwzz
   4: mul r0.xzw, v0.yyyy, cb2[r0.y + 1].xxyz
   5: mad r0.xzw, cb2[r0.y + 0].xxyz, v0.xxxx, r0.xxzw
   6: mad r0.xzw, cb2[r0.y + 2].xxyz, v0.zzzz, r0.xxzw
   7: add r0.xyz, r0.xzwx, cb2[r0.y + 3].xyzx
   8: mul r1.xyzw, r0.yyyy, cb0[74].xyzw
   9: mad r1.xyzw, cb0[73].xyzw, r0.xxxx, r1.xyzw
  10: mad r0.xyzw, cb0[75].xyzw, r0.zzzz, r1.xyzw
  11: add o0.xyzw, r0.xyzw, cb0[76].xyzw
  12: mov o2.x, v2.x
  13: ret


// Note: shader requires additional functionality:
//       Minimum-precision data types
//
ps_4_0
      dcl_globalFlags refactoringAllowed, enableMinPrecision
      dcl_constantbuffer cb0[1], immediateIndexed
      dcl_constantbuffer cb1[4], dynamicIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texture2darray (float,float,float,float) t0
      dcl_input_ps linear v1.xy
      dcl_input_ps nointerpolation v2.x
      dcl_output o0.xyzw
      dcl_temps 1
   0: iadd r0.x, v2.x, cb0[0].x           -> cb0[0].x==0
   1: ishl r0.x, r0.x, l(1)               -> instanceId * 2
   2: mov r0.z, cb1[r0.x + 1].x           -> instanceId * 2 + 1 作为索引 -> 获取到0 
   3: mov r0.xy, v1.xyxx
   4: sample_indexable r0.xyzw {min16f}, r0.xyzx, t0.xyzw, s0
   5: mov o0.xyzw, r0.xyzw {min16f}
   6: ret